
#trashed
#   a
#   STR0 STR1 STR2

prgmCLRSTACK

prgmPUSHB

prgmCLEARSCR

# main loop
Lbl 1

    ">"->STR0
    prgmPUTCHAR # trash a b

    prgmGETSTR
    # returned string: STR0

    If length(STR0)=0 # avoid errors related to `=` down the line
    Goto 1

    If STR0="!" # emergency exit
    Then
        1->a
        Goto 2
    End

    If STR0="btr" # show battery level
    Then
        prgmGETBTRY
        # return: Ans
        # 0:4 <-> low:high

        Ans->a
        # calc battery level
        a*20->a # low bound
        a+20->b # high bound

        "battery level: "->STR2

        # `a` already set
        prgmNUMTOSTR
        #input : a
        #return: STR0
        #trash : L1 L2 Y1

        STR2+STR0+" to "->STR2

        b->a
        prgmNUMTOSTR
        #input : a
        #return: STR0
        #trash : L1 L2 Y1

        STR2+STR0+" percent"->STR0

        prgmPUTSTR
        #input: STR0 - string to put on screen
        #trash: STR0 STR1

        prgmPUTLN
        #trash: STR0

        Goto 1
    End

    If STR0="ext" # exit
    Then
        0->a
        Goto 2
    End

    If STR0="off" # turn calc off
    Then
        prgmTURNOFF
        # TODO this leaves the stack uncleaned and needs to be replaced with a goto (or smt else)
        # Goto 2
    End

    If STR0="ram"
    Then
        prgmGETRAM
        #return: Ans

        Ans->a
        prgmNUMTOSTR
        #input : a
        #return: STR0
        #trash : L1 L2 Y1

        "free ram: "+STR0->STR0
        prgmPUTSTR
        #input: STR0 - string to put on screen
        #trash: STR0 STR1

        prgmPUTLN
        #trash: STR0

        Goto 1
    End

    STR0->STR2 # save requested command

    "unknwn cmd: "->STR0
    prgmPUTSTR # trash: STR0 STR1

    STR2->STR0
    prgmPUTSTR # trash: STR0 STR1

    prgmPUTLN # trash STR0

Goto 1
Lbl 2

prgmCLEARSCR

prgmPOPB

prgmCLRSTACK

a # return code
