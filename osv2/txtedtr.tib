
# TODO
#
# add quit without saving btn? (can be easily done by copying to STR8 or STR9)
#
# additional return var that indicates if the content was changed
#
# add parameter for lines passed on btn press

#input : Ans - string
#output: Ans
#trash : STR0-STR4 STR7 STR8


Ans->STR0

prgmPUSHA
prgmPUSHB
prgmPUSHC
prgmPUSHD
prgmPUSHE

14->e # characters per line

If length(STR0)=0
    " "->STR0

1->d # start index

Lbl rl # refresh lines

    # handle go back
    If d<1
    Then
        1->d
    End

    # handle go forward
    While length(STR0)<d+e*5
        STR0+" "->STR0
    End

    # this seems like shit but is actually not too slow
    sub(STR0,d+e*0,e)->STR1
    sub(STR0,d+e*1,e)->STR2
    sub(STR0,d+e*2,e)->STR3
    sub(STR0,d+e*3,e)->STR4
    sub(STR0,d+e*4,e)->STR4

    STR0->STR7

    d/e->a # TODO can we make this faster by doing integer division?
    prgmNUMTOSTR
    #input : a
    #return: STR0
    #trash : L1 L2 Y1
    "offsetl1c1 "+STR0->STR8

    STR7->STR0

Lbl ml # main loop

    # TODO we can make it so that there is only 1 additional btn for all the 3 actions (and we can add some more)
    Menu(STR8,STR1,l1,STR2,l2,STR3,l3,STR4,l4,"<prev>",pp,"<next>",np,"<done>",dn)

    Lbl l1:
        1->b
        STR1
        Goto pe

    Lbl l2:
        2->b
        STR2
        Goto pe

    Lbl l3:
        3->b
        STR3
        Goto pe

    Lbl l4:
        4->b
        STR4
        Goto pe

Lbl pe # prepare eidt

    # b - indicates which STR we're modifying

    Ans->STR7

    # TODO just use output, it will skip the scroll animation
    Disp "----------------"
    Disp ">>"+STR7 # `>` needs to be updated; TODO check if we can automate this quickly
    Disp "----------------"
    Input ">>",STR7

    length(STR7)->c

    If c=0
    Then
        " "->STR7
        1->c
    End

    # fill with whitespace until is divisable by line
    While remainder(c,e)!=0
        STR7+" "->STR7
        c+1->c
    End

    If b=1
        STR7->STR1
    
    If b=2
        STR7->STR2

    If b=3
        STR7->STR3

    If b=4
        STR7->STR4

    # this is inefficient but I am lazy
    STR1+STR2+STR3+STR4->STR7
    
    # this is a fucking hack and is probably not optimal, but fuck tibasic
    " "+STR0+" "->STR0

    sub(STR0,1,d)+STR7+sub(STR0,d+length(STR7),length(STR0)-d-length(STR7)+1)->STR0

    ""->STR7 # clear var

    # unhack
    sub(STR0,2,length(STR0)-1)->STR0

    Goto ml
    # Goto rl

Lbl pp: # prev
    d-e*2->d
    Goto rl

Lbl np: # next
    d+e*2->d
    Goto rl

Lbl dn: # done

""->STR1
""->STR2
""->STR3
""->STR4
""->STR7
""->STR8

prgmPOPE
prgmPOPD
prgmPOPC
prgmPOPB
prgmPOPA

STR0 # set Ans
