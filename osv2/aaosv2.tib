
# TODO
#
# use Ans to pass arguments where it makes sense
# create PUSH<start><end> as to improve performance
# make sure all trash is set to 0 (if possible for the values to take a lot of mem)
#
# fix the emergency exit prompts (!)
#
# implement screen shutdown and screen brightness fncs
#
# give `Lbl 1` a name
#
# create a timer a[[]]
#
# add eval command
#
# implement diablo 5
#
# make it so that big programs such as notes are archived by defaults and are only unarchived to be executed

#trash : a b STR0-STR7 L0 (some more might be missing)
#return: Ans - return code

prgmCLRSTACK

# main loop
Lbl 1

    ">>"
    prgmGETSTFST
    #input : Ans - string - prompt
    #return: STR0 - user input

    If length(STR0)=0 # avoid errors related to `=` down the line
    Goto 1

    If STR0="b"|STR0="btr"|STR0="btry"|STR0="battery" # show battery level
    Then
        prgmGETBTRY
        # return: Ans
        # 0:4 <-> low:high

        Ans->a
        # calc battery level
        a*20->a # low bound
        a+20->b # high bound

        "battery level: "->STR2

        # `a` already set
        prgmNUMTOSTR
        #input : a
        #return: STR0
        #trash : L1 L2 Y1

        STR2+STR0+" to "->STR2

        b->a
        prgmNUMTOSTR
        #input : a
        #return: STR0
        #trash : L1 L2 Y1

        STR2+STR0+" percent"->STR0

        prgmPTSTLNFT
        #input: STR0 - string - string to put on screen

        Goto 1
    End

    If STR0="e"|STR0="ext"|STR0="exit" # exit
    Then
        0->a
        Goto 2
    End

    If STR0="h"|STR0="hlp"|STR0="help"
    Then
        "b=btr=btry=battery e=ext=exit h=hlp=help m=r=ram=mem n=nts=notes o=p=off=poweroff t=d=time:get time:set"->STR0
        prgmPTSTLNFT
        #input: STR0 - string - string to put on screen

        Goto 1
    End

    If STR0="m"|STR0="r"|STR0="ram"|STR0="mem"
    Then
        prgmGETRAM
        #return: Ans

        Ans->a
        prgmNUMTOSTR
        #input : a
        #return: STR0
        #trash : L1 L2 Y1

        "free ram: "+STR0+" bytes"->STR0
        prgmPTSTLNFT
        #input: STR0 - string - string to put on screen

        Goto 1
    End

    If STR0="n"|STR0="nts"|STR0="notes"
    Then
        prgmNOTES
        #trash: STR0-STR7 L1

        Goto 1
    End

    If STR0="o"|STR0="p"|STR0="off"|STR0="poweroff" # turn calc off
    Then
        prgmTURNOFF # when calc is turned back on it will continue down from here
        Goto 1
    End

    If STR0="t"|STR0="d"|STR0="time:get"
    Then

        # print date

        getDate->L1
        L1(1)->a # year
        L1(2)->b # month
        L1(3)->c # day

        prgmNUMTOSTR
        #input : a
        #return: STR0
        #trash : L1 L2 Y1

        STR0->STR1 # store final string here

        b->a
        prgmNUMTOSTR
        #input : a
        #return: STR0
        #trash : L1 L2 Y1

        STR1+"/"+STR0->STR1

        c->a
        prgmNUMTOSTR
        #input : a
        #return: STR0
        #trash : L1 L2 Y1

        STR1+"/"+STR0->STR1

        STR1->STR0
        prgmPTSTLNFT
        #input: STR0 - string - string to put on screen

        # print time

        getTime->L1
        L1(1)->a # hour
        L1(2)->b # minute
        L1(3)->c # second

        prgmNUMTOSTR
        #input : a
        #return: STR0
        #trash : L1 L2 Y1

        STR0->STR1 # store final string here

        b->a
        prgmNUMTOSTR
        #input : a
        #return: STR0
        #trash : L1 L2 Y1

        STR1+":"+STR0->STR1

        c->a
        prgmNUMTOSTR
        #input : a
        #return: STR0
        #trash : L1 L2 Y1

        STR1+":"+STR0->STR1

        STR1->STR0
        prgmPTSTLNFT
        #input: STR0 - string - string to put on screen

        Goto 1
    End

    If STR0="time:set"
    Then
        Input "year: ",a
        Input "month: ",b
        Input "day: ",c

        setDate(a,b,c)

        Input "hour: ",a
        Input "minute: ",b
        Input "second: ",c

        setTime(a,b,c)

        Goto 1
    End

    # requested command stored in STR0

    "unknown cmd: <"+STR0+"> call <h> to list cmds"->STR0
    prgmPTSTLNFT
    #input: STR0 - string - string to put on screen

Goto 1
Lbl 2

prgmCLRSTACK

a # return code
